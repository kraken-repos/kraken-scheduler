apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        role: web
{{- if .Values.role_permission_sidecar.enabled }}
        role-permission-sidecar-injected: "true"
{{- end}}
    spec:
      # applications
      containers:
      - name: {{ template "name" . }}
        image: {{ index .Values "images" "kraken-scheduler" }}
        env:
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{range $key,$value:= .Values.env}}
        - name: {{$key}}
          value: {{$value | quote}}
{{end}}
        ports:
        - containerPort: {{.Values.service.port}}
        resources:
{{ toYaml .Values.resources | indent 10 }}

        livenessProbe:
          httpGet:
            path: /actuator/health
            port: {{.Values.service.port}}
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: {{.Values.service.port}}


        volumeMounts:
        - name: hana
          mountPath: /etc/secrets/hana
        - name: kafka
          mountPath: /etc/secrets/kafka


      volumes:
      - name: hana
        secret:
          secretName: {{ template "fullname" $ }}-hana
      - name: kafka
        secret:
          secretName: {{ template "fullname" $ }}-kafka
